# –ó–∞–¥–∞–Ω–∏–µ No2
# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
# üìå –û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é- —É–≥–∞–¥–∞–∏ÃÜ–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10].
# üìå –ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–∏ÃÜ–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.
from random import randint
from functools import wraps

MIN_NUM = 1
MAX_NUM = 100
MIN_TRY = 1
MAX_TRY = 10


def game_rules(func):
    @wraps(func)
    def wrapper(hidden_number, trying):
        hidden_number = hidden_number if MIN_NUM <= hidden_number <= MAX_NUM else randint(MIN_NUM, MAX_TRY)
        trying = trying if MIN_TRY <= trying <= MAX_TRY else randint(MIN_TRY, MAX_TRY)
        res = func(hidden_number, trying)
        return res

    return wrapper


@game_rules
def guess_num(hidden_number, trying):
    count = trying
    print(f'Hi. try to guess hidden number from {MIN_NUM} to {MAX_NUM}. You have {count} tries only! ')
    while count:
        user_num = int(input(f'try #{trying - count + 1}, make your choice: '))
        if user_num == hidden_number:
            print(f'Great! You win! Hidden number is {hidden_number}')
            return f'WIN! -hidden_number: {hidden_number}'
        else:
            print(
                f'Sorry, you are mistaken. Hidden number is {'>' if user_num < hidden_number else '<'} then yours')
        count -= 1

    print(f'You loose (: Hidden number was {hidden_number}')
    return f'LOOSE!-hidden_number: {hidden_number}'


if __name__ == '__main__':
    print(guess_num(50, 3))
